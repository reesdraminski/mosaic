{
    "examples": [
        {
            "name": "Maze",
            "code": "const moz = new Mosaic(8, 8);\n\nconst PLAYER = \"red\";\nconst MAZE = \"black\";\nconst FINISH = \"yellow\";\nconst WIN = {x: 7, y: 7};\n\n// player position\nlet x = 0;\nlet y = 0;\n\n(function startGame() {\n\t// draw player\n\tmoz.setTileColor(x, y, PLAYER);\n\t\n\t// draw finish tile\n\tmoz.setTileColor(WIN.x, WIN.y, FINISH);\n\t\n\tdrawMaze();\n})();\n\nfunction drawMaze() {\n\tmoz.setTileColor(0, 1, MAZE);\n\tmoz.setTileColor(0, 2, MAZE);\n\tmoz.setTileColor(0, 3, MAZE);\n\tmoz.setTileColor(0, 7, MAZE);\n\t\n\tmoz.setTileColor(1, 2, MAZE);\n\tmoz.setTileColor(1, 5, MAZE);\n\t\n\tmoz.setTileColor(2, 4, MAZE);\n\tmoz.setTileColor(2, 5, MAZE);\n\tmoz.setTileColor(2, 6, MAZE);\n\t\n\tmoz.setTileColor(3, 0, MAZE);\n\tmoz.setTileColor(3, 1, MAZE);\n\tmoz.setTileColor(3, 4, MAZE);\n\t\n\tmoz.setTileColor(4, 0, MAZE);\n\t\n\tmoz.setTileColor(5, 1, MAZE);\n\tmoz.setTileColor(5, 4, MAZE);\n\tmoz.setTileColor(5, 5, MAZE);\n\t\n\tmoz.setTileColor(6, 5, MAZE);\n\t\n\tmoz.setTileColor(7, 0, MAZE);\n\tmoz.setTileColor(7, 1, MAZE);\n\tmoz.setTileColor(7, 2, MAZE);\n\tmoz.setTileColor(7, 3, MAZE);\n\tmoz.setTileColor(7, 6, MAZE);\n}\n\ndocument.onkeydown = e => {\n\t// move player up on W\n\tif (e.code == \"KeyW\")\n\t\tif (isInBounds(x, y + 1) && !isMaze(x, y + 1))\n\t\t\ty++;\n\t// move player down on S\n\tif (e.code == \"KeyS\")\n\t\tif (isInBounds(x, y - 1) && !isMaze(x, y - 1))\n\t\t\ty--;\n\t// move player left on A\n\tif (e.code == \"KeyA\")\n\t\tif (isInBounds(x - 1, y) && !isMaze(x - 1, y))\n\t\t\tx--;\n\t// move player right on D\n\tif (e.code == \"KeyD\")\n\t\tif (isInBounds(x + 1, y) && !isMaze(x + 1, y))\n\t\t\tx++;\n\t\n\tmoz.clear();\n\t\n\t// detect if user has won\n\tif (x == WIN.x && y == WIN.y)\n\t\tconsole.log(\"You won!\");\n\telse\n\t\tmoz.setTileColor(WIN.x, WIN.y, FINISH);\n\t\n\tdrawMaze();\n\tmoz.setTileColor(x, y, PLAYER);\n}\n\nfunction isInBounds(x, y) {\n\tif (x < moz.width && x >= 0) \n\t\tif (y < moz.height && y >= 0)\n\t\t\treturn true;\n\t\n\treturn false;\n}\n\nfunction isMaze(x, y) {\n\treturn moz.getTileColor(x, y) == MAZE;\n}"
        },
        {
            "name": "Pong",
            "code": "const moz = new Mosaic(15, 15);\n\nconst PLAYER_ONE_COLOR = \"red\";\nconst PLAYER_TWO_COLOR = \"blue\";\nconst BALL_COLOR = \"black\";\n\nlet playerOneScore = 0;\nlet playerTwoScore = 0;\n\n// two numbers since there are two segments on the paddle\nlet playerOnePos = [6, 7];\nlet playerTwoPos = [6, 7];\n\nlet ballX, ballY, ballXDirection, ballYDirection;\n\n(function startGame() {\n\trenderPlayers();\n\tplaceBall();\n\n\tMosaic.loop(() => {\n\t\tmoz.clear();\n\t\t\n\t\trenderPlayers();\n\t\tmoveBall();\n\t}, 350);\n})();\n\nfunction placeBall() {\n\t// randomly go left or right and up or down\n\tballXDirection = [1, -1][Math.floor(Math.random() * 2)];\n\tballYDirection = [1, -1][Math.floor(Math.random() * 2)];\n\t\n\t// somewhere in four center squares\n\tballX = [6, 7][Math.floor(Math.random() * 2)];\n\tballY = [6, 7][Math.floor(Math.random() * 2)];\n}\n\nfunction moveBall() {\n\tballX += ballXDirection;\n\tballY += ballYDirection;\n\t\n\t// player one paddle collision detection\n\tif (moz.getTileColor(ballX - 1, ballY) == PLAYER_ONE_COLOR) {\n\t\tballXDirection *= -1;\n\t\t\n\t\trenderBall();\n\t}\n\t// player two paddle collision detection\n\telse if (moz.getTileColor(ballX + 1, ballY) == PLAYER_TWO_COLOR) {\n\t\tballXDirection *= -1;\n\t\t\n\t\trenderBall();\n\t}\t\n\t// player two score check\n\telse if (ballX == 0) {\n\t\trenderBall();\n\t\t\n\t\tplayerTwoScore++;\n\t\t\n\t\tconsole.log(\"Score: \" + playerOneScore + \" - \" + playerTwoScore);\n\t\t\n\t\tplaceBall();\n\t}\n\t// player one score check\n\telse if (ballX == moz.width - 1) {\n\t\trenderBall();\n\t\t\n\t\tplayerOneScore++;\n\t\t\n\t\tconsole.log(\"Score: \" + playerOneScore + \" - \" + playerTwoScore);\n\t\t\n\t\tplaceBall();\n\t}\n\t// top wall rebound\n\telse if (ballY == moz.height - 1) {\n\t\trenderBall();\n\t\t\n\t\tballYDirection *= -1;\n\t}\n\t// bottom wall rebound\n\telse if (ballY == 0) {\n\t\trenderBall();\n\t\t\n\t\tballYDirection *= -1;\n\t}\n\telse {\n\t\trenderBall();\n\t}\n}\n\nfunction renderBall() {\t\n\tmoz.setTileColor(ballX, ballY, BALL_COLOR);\n}\n\nfunction renderPlayers() {\n\t// update player one paddle positions\n\tmoz.setTileColor(0, playerOnePos[0], PLAYER_ONE_COLOR);\n\tmoz.setTileColor(0, playerOnePos[1], PLAYER_ONE_COLOR);\n\n\t// update player two paddle positions\n\tmoz.setTileColor(moz.width - 1, playerTwoPos[0], PLAYER_TWO_COLOR);\n\tmoz.setTileColor(moz.width - 1, playerTwoPos[1], PLAYER_TWO_COLOR);\n}\n\ndocument.onkeydown = e => {\n\t// move player one up\n\tif (e.code == \"KeyW\") {\n\t\tif (playerOnePos[1] + 1 <= moz.height - 1) {\n\t\t\tplayerOnePos[0]++;\n\t\t\tplayerOnePos[1]++;\n\t\t}\n\t}\n\t// move player two up\n\tif (e.code == \"KeyS\") {\n\t\tif (playerOnePos[0] > 0) {\n\t\t\tplayerOnePos[0]--;\n\t\t\tplayerOnePos[1]--;\n\t\t}\n\t}\n\t\n\t// move player two up\n\tif (e.code == \"ArrowUp\") {\n\t\tif (playerTwoPos[1] + 1 <= moz.height - 1) {\n\t\t\tplayerTwoPos[0]++;\n\t\t\tplayerTwoPos[1]++;\n\t\t}\n\t}\n\t// move player two down\n\tif (e.code == \"ArrowDown\") {\n\t\tif (playerTwoPos[0] > 0) {\n\t\t\tplayerTwoPos[0]--;\n\t\t\tplayerTwoPos[1]--;\n\t\t}\n\t}\n\t\n\t// clear window\n\tmoz.clear();\n\t\n\t// paint the players in new positions\n\trenderPlayers();\n\trenderBall();\n};"
        },
        {
            "name": "Tic-Tac-Toe",
            "code": "const moz = new Mosaic(3, 3);\n\nconst PLAYER_ONE = \"X\";\nconst PLAYER_TWO = \"O\";\n\nlet playerTurn = 1;\n\n(function startGame() {\n\t// add click listeners\n\tfor (let x = 0; x < moz.width; x++)\n\t\tfor (let y = 0; y < moz.height; y++)\n\t\t\tmoz.setTileOnClick(x, y, () => select(x, y));\n\t\n\tconsole.log(\"It's player one's turn.\");\n})();\n\nfunction select(x, y) {\n\t// if the game is won, don't allow user input\n\tif (gameWon()) return;\n\n\tif (playerTurn == 1) {\n\t\tif (moz.getTileText(x, y) == \"\") {\n\t\t\tmoz.setTileText(x, y, PLAYER_ONE);\n\t\t\t\n\t\t\tplayerTurn = 2;\n\t\t\t\n\t\t\tif (gameWon())\n\t\t\t\tconsole.log(\"Player one wins!\");\n\t\t\telse\n\t\t\t\tconsole.log(\"It's player two's turn.\");\n\t\t}\n\t}\n\telse {\n\t\tif (moz.getTileText(x, y) == \"\") {\n\t\t\tmoz.setTileText(x, y, PLAYER_TWO);\n\t\t\t\n\t\t\tplayerTurn = 1;\n\t\t\t\n\t\t\tif (gameWon())\n\t\t\t\tconsole.log(\"Player two wins!\");\n\t\t\telse\n\t\t\t\tconsole.log(\"It's player one's turn.\");\n\t\t}\n\t}\t\n}\n\nfunction gameWon() {\n\t// check diagonals\n\tlet diagOne = \"\";\n\tlet diagTwo = \"\";\n\tfor (let i = 0; i < moz.height; i++) {\n\t\t// check RTL diagonal\n\t\tdiagOne += moz.getTileText(i, i);\n\t\t\n\t\t// check LTR diagonal\n\t\tdiagTwo += moz.getTileText(i, moz.height - 1 - i);\n\t}\n\t\t\n\tif (diagOne == PLAYER_ONE.repeat(moz.width))\n\t\treturn true;\n\telse if (diagOne == PLAYER_TWO.repeat(moz.width))\n\t\treturn true;\n\telse if (diagTwo == PLAYER_ONE.repeat(moz.width))\n\t\treturn true;\n\tif (diagTwo == PLAYER_TWO.repeat(moz.width))\n\t\t\treturn true;\n\t\n\t// check rows\n\tfor (let y = 0; y < moz.height; y++) {\n\t\tlet row = \"\";\n\t\tfor (let x = 0; x < moz.width; x++) \n\t\t\trow += moz.getTileText(x, y);\n\t\t\n\t\tif (row == PLAYER_ONE.repeat(moz.width))\n\t\t\treturn true;\n\t\telse if (row == PLAYER_TWO.repeat(moz.width))\n\t\t\treturn true;\n\t}\n\t\n\t// check cols\n\tfor (let x = 0; x < moz.width; x++) {\n\t\tlet col = \"\";\n\t\tfor (let y = 0; y < moz.height; y++) \n\t\t\tcol += moz.getTileText(x, y);\n\t\t\n\t\tif (col == PLAYER_ONE.repeat(moz.width))\n\t\t\treturn true;\n\t\telse if (col == PLAYER_TWO.repeat(moz.width))\n\t\t\treturn true;\n\t}\n\t\n\treturn false;\n}"
        },
        {
            "name": "Whack-A-Mole",
            "code": "const moz = new Mosaic(10, 10);\nconst MOLE = \"brown\";\n\nlet score = 0;\n\n// allow whacking of moles on each tile\nfor (let x = 0; x < moz.width; x++) {\n\tfor (let y = 0; y < moz.height; y++) {\n\t\tmoz.setTileOnClick(x, y, () => whack(x, y));\n\t}\n}\n\nplaceMoles();\n\nasync function placeMoles() {\n\tmoz.clear();\n\t\n\tgenerateMole();\n\t\n\tawait sleep(500 + Math.ceil(Math.random() * 750));\n\t\n\tplaceMoles();\n}\n\nfunction generateMole() {\n\tmoz.clear(); \n\t\n\tconst x = Math.floor(Math.random() * moz.width);\n\tconst y = Math.floor(Math.random() * moz.height);\n\t\n\tmoz.setTileColor(x, y, MOLE);\n}\n\nfunction whack(x, y) {\n\tif (moz.getTileColor(x, y) == MOLE) {\n\t\tscore++;\n\t\t\n\t\tconsole.log(\"Score: \" + score);\n\t\t\n\t\tgenerateMole();\n\t}\t\n}"
        }
    ]
}